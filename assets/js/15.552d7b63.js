(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{568:function(t,a,s){"use strict";s.r(a);var n=s(20),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("前陣子在對 Neovim 做配置時，有個需求是想要動態地讀取目錄中的檔案，並且使用 "),s("code",[t._v("require")]),t._v(" 引用其內容做相關的設定，本文記錄如何使用 Lua 實踐此功能。")]),t._v(" "),s("h2",{attrs:{id:"使用-io-popen-執行指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-io-popen-執行指令"}},[t._v("#")]),t._v(" 使用 "),s("code",[t._v("io.popen")]),t._v(" 執行指令")]),t._v(" "),s("p",[t._v("Lua 提供了 "),s("code",[t._v("io.popen")]),t._v(" 可以讓使用者叫用 Shell 的指令，因此我們可以使用這個函式叫用 "),s("code",[t._v("ls")]),t._v(" 來列出目錄下的檔案：")]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" parsers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("popen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls ~/.config/nvim/lua/treesitter/parsers'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" file "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" parsers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lines")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--[[\nc.lua\njs.lua\nlua.lua\nshell.lua\nvim.lua\nvue.lua\nweb.lua\n--]]")]),t._v("\n")])])]),s("p",[t._v("程式碼下面的註解為執行結果，其中指令執行的位置會是 Lua 執行的位置，因此在不知道使用者會在那個位置執行 Lua 的情況下，指令中的路徑盡量使用"),s("strong",[t._v("絕對路徑")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("io.popen")]),t._v(" 得到的結果為 "),s("code",[t._v("file")]),t._v(" 物件， "),s("code",[t._v("file:lines")]),t._v(" 會將指令結果以斷行符區隔，並在每次巡覽時吐出當前的輸出，由此取得目錄下的檔案。")]),t._v(" "),s("h2",{attrs:{id:"執行-lua-檔案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#執行-lua-檔案"}},[t._v("#")]),t._v(" 執行 Lua 檔案")]),t._v(" "),s("p",[t._v("接著可以使用取得的檔案清單組出 Lua 請求的路徑：")]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" ensure_installed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" parsers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("popen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls ~/.config/nvim/lua/treesitter/parsers'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" file "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" parsers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lines")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" present"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parser "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pcall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'treesitter.parsers.'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),t._v(" file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gsub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%.lua'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" present "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 檔案內容已存在 parser 中")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("p",[t._v("這裡要注意 Neovim 中， Lua 的引用路徑是從 "),s("code",[t._v("~/.config/nvim/lua/")]),t._v(" 開始，因此 "),s("code",[t._v("/lua/")]),t._v(" 之前的上層目錄不需要包含在引用的路徑中，並且也不會有 "),s("code",[t._v(".lua")]),t._v(" 的副檔名。")]),t._v(" "),s("h2",{attrs:{id:"總結"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#總結"}},[t._v("#")]),t._v(" 總結")]),t._v(" "),s("p",[t._v("要使用 Lua 讀取目錄下的所有檔案，可以使用 "),s("code",[t._v("io.popen")]),t._v(" 函式執行 "),s("code",[t._v("ls")]),t._v(" 指令，藉此取得檔案列表，將其轉成 Lua 的引用路徑後，就可以由 "),s("code",[t._v("require")]),t._v(" 引入。")]),t._v(" "),s("h2",{attrs:{id:"參考資料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#參考資料"}},[t._v("#")]),t._v(" 參考資料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://vi.stackexchange.com/a/36648",target:"_blank",rel:"noopener noreferrer"}},[t._v("StackExchange Neovim Lua script to dynamically load .lua config files"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://stackoverflow.com/a/11130774/9265131",target:"_blank",rel:"noopener noreferrer"}},[t._v("stackoverflow How to get list of directories in Lua"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.lua.org/manual/5.1/manual.html#5.7",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lua Manual 5.7 Input and Output Facilities"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);