<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Limitless Ping</title>
  
  <subtitle>Peter Chen&#39;s Blog</subtitle>
  <link href="http://peterhpchen.github.io/blog/atom.xml" rel="self"/>
  
  <link href="http://peterhpchen.github.io/blog/"/>
  <updated>2022-04-30T07:16:02.214Z</updated>
  <id>http://peterhpchen.github.io/blog/</id>
  
  <author>
    <name>Peter Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>設定 ls 指令輸出的顏色</title>
    <link href="http://peterhpchen.github.io/blog/2022/04/30/set-lscolors/"/>
    <id>http://peterhpchen.github.io/blog/2022/04/30/set-lscolors/</id>
    <published>2022-04-30T01:24:14.000Z</published>
    <updated>2022-04-30T07:16:02.214Z</updated>
    
    <content type="html"><![CDATA[<p>我們知道使用 <code>ls</code> 指令可以列出目錄下的各式檔案及目錄，但是所有類型的檔案都會以相同的顏色輸出，難以在第一時間就了解檔案的種類，我們還得加上 <code>-l</code> 參數列出詳細的資訊才能知道，這時如果可以依照顏色輸出不同類型的檔案的話，會使檔案列表更加地一目瞭然。</p><h2 id="為-ls-結果上色"><a href="#為-ls-結果上色" class="headerlink" title="為 ls 結果上色"></a>為 <code>ls</code> 結果上色</h2><p>加上 <code>--color=auto</code> 參數，它會以不同的顏色區別各類檔案：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --color=auto</span><br></pre></td></tr></table></figure><p><img src="/blog/2022/04/30/set-lscolors/ls-color-auto.png" alt="ls --color=auto"></p><h2 id="設定-LS-COLORS-修改-ls-輸出顏色"><a href="#設定-LS-COLORS-修改-ls-輸出顏色" class="headerlink" title="設定 LS_COLORS 修改 ls 輸出顏色"></a>設定 <code>LS_COLORS</code> 修改 <code>ls</code> 輸出顏色</h2><p>如果想對 <code>ls</code> 的輸出顏色做修改，可以修改環境變數 <code>LS_COLORS</code> ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LS_COLORS=&#x27;di=01;35:&#x27;; export LS_COLORS</span><br></pre></td></tr></table></figure><ul><li><code>di</code> ：檔案類型， <code>di</code> 為目錄。</li><li><code>01;35</code> ：兩個設定數字，以 <code>;</code> 區隔，第一個數字為字型（ <code>01</code> 為粗體 Bold ），第二個數字為顏色（ <code>35</code> 為紫色 Purple ）。</li><li><code>:</code> ：分隔不同檔案類型設定的區隔符。</li></ul><p>設定的數字沒有順序之分，因此 <code>01;35</code> 也可以設定為 <code>35;01</code> 。</p><p>下列為常用的字型列表：</p><table><thead><tr><th>數字</th><th>字型</th></tr></thead><tbody><tr><td>00</td><td>預設</td></tr><tr><td>01</td><td>粗體</td></tr><tr><td>04</td><td>底線</td></tr></tbody></table><p>字型可以多選，例如設定粗體又想要有底線的話，可以設置 <code>01;04</code> 。</p><p>下列為顏色列表：</p><table><thead><tr><th>數字</th><th>顏色</th></tr></thead><tbody><tr><td>30</td><td>黑</td></tr><tr><td>31</td><td>紅</td></tr><tr><td>32</td><td>綠</td></tr><tr><td>33</td><td>橘</td></tr><tr><td>34</td><td>藍</td></tr><tr><td>35</td><td>紫</td></tr><tr><td>36</td><td>青</td></tr><tr><td>37</td><td>灰</td></tr></tbody></table><p>除了字體的顏色， <code>LS_COLORS</code> 也可以設定背景色，下面是背景色的編碼：</p><table><thead><tr><th>數字</th><th>背景顏色</th></tr></thead><tbody><tr><td>40</td><td>黑</td></tr><tr><td>41</td><td>紅</td></tr><tr><td>42</td><td>綠</td></tr><tr><td>43</td><td>橘</td></tr><tr><td>44</td><td>藍</td></tr><tr><td>45</td><td>紫</td></tr><tr><td>46</td><td>青</td></tr><tr><td>47</td><td>灰</td></tr></tbody></table><p>接著如果想要設定除了目錄外不同的檔案類型顏色時，每種類型也會對應一個鍵值，就像是 <code>di</code> 表示為目錄一樣，下列為個檔案類型的列表：</p><table><thead><tr><th>鍵值</th><th>名稱</th><th>說明</th></tr></thead><tbody><tr><td>fi</td><td>FILE</td><td>一般的檔案</td></tr><tr><td>di</td><td>DIR</td><td>目錄</td></tr><tr><td>ln</td><td>SYMLINK, LINK, LNK</td><td>Symbolic link</td></tr><tr><td>*.extension</td><td></td><td>此副檔名的檔案，例如： <code>*.jpg</code> 就會涵蓋所有以 <code>jpg</code> 為副檔名的檔案</td></tr></tbody></table><p>到這裡我們就已經知道所有主要的設定編碼了，現在來看個例子，如果我們想要將目錄設定為藍底紅字並且為粗體加底線的話，我們可以這樣做：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LS_COLORS=&#x27;di=01;04;44;31:&#x27;; export LS_COLORS</span><br></pre></td></tr></table></figure><p><img src="/blog/2022/04/30/set-lscolors/set-lscolors.png" alt="設定 LS_COLORS 後"></p><p>完整的編碼表可以參考這篇文章： <a href="http://www.bigsoft.co.uk/blog/2008/04/11/configuring-ls_colors">Configuring LS_COLORS</a> 。</p><h2 id="設定多個類型的顏色"><a href="#設定多個類型的顏色" class="headerlink" title="設定多個類型的顏色"></a>設定多個類型的顏色</h2><p>如果要設定多個類型的顏色，可以在 <code>:</code> 後面再加上其他的類型設定，例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LS_COLORS=&#x27;di=01;04;44;31:ln=00;33:&#x27;; export LS_COLORS</span><br></pre></td></tr></table></figure><p>如果想要對 <code>LS_COLORS</code> 設定多次的話，可以將原本的值加進來：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LS_COLORS=$LS_COLORS:&#x27;di=0;35:&#x27; ; export LS_COLORS</span><br></pre></td></tr></table></figure><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p><code>ls</code> 指令在加入 <code>--color=auto</code> 後，可以對其輸出的結果產生顏色，方便使用者辨識。</p><p>如果想要客製顏色時，可以藉由修改環境變數 <code>LS_COLORS</code> 來達成，這樣一來就可以客製成符合使用習慣的顏色，也可以搭配 theme 做出變化。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="http://n.sfs.tw/content/index/11080">[Linux] ls –color 的檔案特徵及顏色意義</a></li><li><a href="https://askubuntu.com/a/466203">askubuntu How do I change the color for directories with ls in the console?</a></li><li><a href="https://gist.github.com/thomd/7667642">Gist thomd&#x2F;LC_COLORS.md</a></li><li><a href="https://geoff.greer.fm/lscolors/">LSCOLORS Generator</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我們知道使用 &lt;code&gt;ls&lt;/code&gt; 指令可以列出目錄下的各式檔案及目錄，但是所有類型的檔案都會以相同的顏色輸出，難以在第一時間就了解檔案的種類，我們還得加上 &lt;code&gt;-l&lt;/code&gt; 參數列出詳細的資訊才能知道，這時如果可以依照顏色輸出不同類型的檔案的話，會</summary>
      
    
    
    
    
    <category term="shell" scheme="http://peterhpchen.github.io/blog/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>在 Shell 中將指令結果依照特定欄位排序</title>
    <link href="http://peterhpchen.github.io/blog/2022/04/29/shell-sort-by-specific-fields/"/>
    <id>http://peterhpchen.github.io/blog/2022/04/29/shell-sort-by-specific-fields/</id>
    <published>2022-04-29T12:08:38.000Z</published>
    <updated>2022-04-30T07:16:02.214Z</updated>
    
    <content type="html"><![CDATA[<p>在執行指令後，有時我們會想要以特定的方式排序指令所輸出的結果，這時可以使用 <code>sort</code> 來做排序，本文記錄如何使用 sort 將特定字元作為分隔符，並對分隔後的特定欄位做排序。</p><h2 id="情境"><a href="#情境" class="headerlink" title="情境"></a>情境</h2><p>假設現在使用了 <code>find</code> 找出一些檔案，並用 <code>sort</code> 排序：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">% </span><span class="language-bash">find <span class="variable">$DOTFILES_ROOT</span>/*/scripts -name install.sh | <span class="built_in">sort</span></span></span><br><span class="line">/Users/PeterChen/.dotfiles/bat/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/cheat.sh/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/exa/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/fd/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/fzf/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/gcc/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/git/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/neofetch/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/node.nvm/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/nvim.packer.nvim/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/nvim/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/pip/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/pyenv/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/ripgrep/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/rust.cargo/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/rust/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/sdkman/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/tmux/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/vim/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/zsh.fzf-tab/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/zsh.zplug/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/zsh/scripts/install.sh</span><br></pre></td></tr></table></figure><p>我們想要對 <code>.dotfiles</code> 的下層資料夾做排序，可以看到因為沒有設定分隔符的關係， <code>sort</code> 將整個字串視為排序的對象，因此會將路徑層的 <code>/</code> 也作為排序的依據，所以像是  <strong><code>nvim.packer.nvim</code> 與 <code>nvim</code></strong> 和 <strong><code>rust.cargo</code> 與 <code>rust</code></strong> 會是排序相反的狀況。</p><h2 id="設定分隔符與排序欄位"><a href="#設定分隔符與排序欄位" class="headerlink" title="設定分隔符與排序欄位"></a>設定分隔符與排序欄位</h2><p><code>sort</code> 可以使用 <code>-t</code> 或是 <code>--field-separator</code> 來指定分隔符，並且使用 <code>-k</code> 或是 <code>--key</code> 指定要排序的欄位。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">% </span><span class="language-bash">find <span class="variable">$DOTFILES_ROOT</span>/*/scripts -name install.sh | <span class="built_in">sort</span> -t <span class="string">&#x27;/&#x27;</span> -k 5,5</span></span><br><span class="line">/Users/PeterChen/.dotfiles/bat/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/cheat.sh/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/exa/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/fd/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/fzf/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/gcc/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/git/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/neofetch/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/node.nvm/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/nvim/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/nvim.packer.nvim/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/pip/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/pyenv/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/ripgrep/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/rust/scripts/install.sh</span><br><span class="line marked">/Users/PeterChen/.dotfiles/rust.cargo/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/sdkman/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/tmux/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/vim/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/zsh/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/zsh.fzf-tab/scripts/install.sh</span><br><span class="line">/Users/PeterChen/.dotfiles/zsh.zplug/scripts/install.sh</span><br></pre></td></tr></table></figure><p><code>-k</code> 設置的是分隔後欄位的編號，第一個數字為起始欄位的編號，第二個是結束欄位的編號，中間以逗號 <code>,</code> 區隔。</p><p>我們的目標是排序 <code>.dotfiles</code> 的下層，因此是第五層（由於一開始就是 <code>/</code> ，因此第一個欄位的空字串也要列入計算），而由於我們只想對此層資料夾進行排序，因此起始與結束都設定 <code>5</code> 即可。</p><p>最後可以看到指令執行的結果完美地以 <code>.dotfiles</code> 下層資料夾由小到大排序好了。</p><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p><code>sort</code> 會將整個字串作為搜尋結果，因此碰到像是目錄的斜線 <code>/</code> 時，也會將其包含在排序的目標中，這會使得排序的結果不如預期。</p><p>為了解決這個問題，我們可以使用 <code>-t</code> 參數設定分隔符，並使用 <code>-k</code> 選定要排序的依據欄位，藉此排除此問題。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://blog.gtwang.org/linux/linux-sort-command-tutorial-and-examples/">Linux 的 sort 排序指令教學與常用範例整理</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在執行指令後，有時我們會想要以特定的方式排序指令所輸出的結果，這時可以使用 &lt;code&gt;sort&lt;/code&gt; 來做排序，本文記錄如何使用 sort 將特定字元作為分隔符，並對分隔後的特定欄位做排序。&lt;/p&gt;
&lt;h2 id=&quot;情境&quot;&gt;&lt;a href=&quot;#情境&quot; class=</summary>
      
    
    
    
    
    <category term="shell" scheme="http://peterhpchen.github.io/blog/tags/shell/"/>
    
  </entry>
  
</feed>
